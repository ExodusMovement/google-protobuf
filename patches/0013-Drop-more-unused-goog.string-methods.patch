From 9c463f33603c9a046841025d0394521f1ba47c75 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=D0=A1=D0=BA=D0=BE=D0=B2=D0=BE=D1=80=D0=BE=D0=B4=D0=B0=20?=
 =?UTF-8?q?=D0=9D=D0=B8=D0=BA=D0=B8=D1=82=D0=B0=20=D0=90=D0=BD=D0=B4=D1=80?=
 =?UTF-8?q?=D0=B5=D0=B5=D0=B2=D0=B8=D1=87?= <chalkerx@gmail.com>
Date: Wed, 2 Sep 2020 08:25:55 +0300
Subject: [PATCH 13/27] Drop more unused goog.string methods

---
 google-protobuf.js | 197 ---------------------------------------------
 1 file changed, 197 deletions(-)

diff --git a/google-protobuf.js b/google-protobuf.js
index 840e5ab..dfa958e 100644
--- a/google-protobuf.js
+++ b/google-protobuf.js
@@ -1022,76 +1022,12 @@ goog.crypt.xorByteArray = function (a, b) {
 };
 goog.string = {};
 goog.string.internal = {};
-goog.string.internal.startsWith = function (a, b) {
-  return 0 == a.lastIndexOf(b, 0);
-};
-goog.string.internal.endsWith = function (a, b) {
-  var c = a.length - b.length;
-  return 0 <= c && a.indexOf(b, c) == c;
-};
-goog.string.internal.caseInsensitiveStartsWith = function (a, b) {
-  return 0 == goog.string.internal.caseInsensitiveCompare(b, a.substr(0, b.length));
-};
-goog.string.internal.caseInsensitiveEndsWith = function (a, b) {
-  return 0 == goog.string.internal.caseInsensitiveCompare(b, a.substr(a.length - b.length, b.length));
-};
-goog.string.internal.caseInsensitiveEquals = function (a, b) {
-  return a.toLowerCase() == b.toLowerCase();
-};
 goog.string.internal.isEmptyOrWhitespace = function (a) {
   return /^[\s\xa0]*$/.test(a);
 };
-goog.string.internal.trim =
-  goog.TRUSTED_SITE && String.prototype.trim
-    ? function (a) {
-        return a.trim();
-      }
-    : function (a) {
-        return /^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(a)[1];
-      };
-goog.string.internal.caseInsensitiveCompare = function (a, b) {
-  a = String(a).toLowerCase();
-  b = String(b).toLowerCase();
-  return a < b ? -1 : a == b ? 0 : 1;
-};
 goog.string.internal.contains = function (a, b) {
   return -1 != a.indexOf(b);
 };
-goog.string.internal.caseInsensitiveContains = function (a, b) {
-  return goog.string.internal.contains(a.toLowerCase(), b.toLowerCase());
-};
-goog.string.internal.compareElements_ = function (a, b) {
-  return a < b ? -1 : a > b ? 1 : 0;
-};
-goog.string.TypedString = function () {};
-goog.string.Const = function (a, b) {
-  this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ =
-    (a === goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_ && b) || '';
-  this.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ = goog.string.Const.TYPE_MARKER_;
-};
-goog.string.Const.prototype.implementsGoogStringTypedString = !0;
-goog.string.Const.prototype.getTypedStringValue = function () {
-  return this.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
-};
-goog.string.Const.prototype.toString = function () {
-  return 'Const{' + this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ + '}';
-};
-goog.string.Const.unwrap = function (a) {
-  if (
-    a instanceof goog.string.Const &&
-    a.constructor === goog.string.Const &&
-    a.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ === goog.string.Const.TYPE_MARKER_
-  )
-    return a.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
-  goog.asserts.fail("expected object of type Const, got '" + a + "'");
-  return 'type_error:Const';
-};
-goog.string.Const.from = function (a) {
-  return new goog.string.Const(goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_, a);
-};
-goog.string.Const.TYPE_MARKER_ = {};
-goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_ = {};
-goog.string.Const.EMPTY = goog.string.Const.from('');
 goog.object = {};
 goog.object.is = function (a, b) {
   return a === b ? 0 !== a || 1 / a === 1 / b : a !== a && b !== b;
@@ -1428,141 +1364,8 @@ goog.functions.rateLimit = function (a, b, c) {
     d || ((d = goog.global.setTimeout(e, b)), a.apply(c, arguments));
   };
 };
-goog.string.DETECT_DOUBLE_ESCAPING = !1;
-goog.string.FORCE_NON_DOM_HTML_UNESCAPING = !1;
-goog.string.Unicode = { NBSP: '\u00a0' };
-goog.string.startsWith = goog.string.internal.startsWith;
-goog.string.endsWith = goog.string.internal.endsWith;
-goog.string.caseInsensitiveStartsWith = goog.string.internal.caseInsensitiveStartsWith;
-goog.string.caseInsensitiveEndsWith = goog.string.internal.caseInsensitiveEndsWith;
-goog.string.caseInsensitiveEquals = goog.string.internal.caseInsensitiveEquals;
-goog.string.subs = function (a, b) {
-  for (var c = a.split('%s'), d = '', e = Array.prototype.slice.call(arguments, 1); e.length && 1 < c.length; )
-    d += c.shift() + e.shift();
-  return d + c.join('%s');
-};
-goog.string.collapseWhitespace = function (a) {
-  return a.replace(/[\s\xa0]+/g, ' ').replace(/^\s+|\s+$/g, '');
-};
 goog.string.isEmptyOrWhitespace = goog.string.internal.isEmptyOrWhitespace;
-goog.string.isEmptyString = function (a) {
-  return 0 == a.length;
-};
-goog.string.isEmpty = goog.string.isEmptyOrWhitespace;
-goog.string.isEmptyOrWhitespaceSafe = function (a) {
-  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(a));
-};
-goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;
-goog.string.isBreakingWhitespace = function (a) {
-  return !/[^\t\n\r ]/.test(a);
-};
-goog.string.isAlpha = function (a) {
-  return !/[^a-zA-Z]/.test(a);
-};
-goog.string.isNumeric = function (a) {
-  return !/[^0-9]/.test(a);
-};
-goog.string.isAlphaNumeric = function (a) {
-  return !/[^a-zA-Z0-9]/.test(a);
-};
-goog.string.isSpace = function (a) {
-  return ' ' == a;
-};
-goog.string.isUnicodeChar = function (a) {
-  return (1 == a.length && ' ' <= a && '~' >= a) || ('\u0080' <= a && '\ufffd' >= a);
-};
-goog.string.stripNewlines = function (a) {
-  return a.replace(/(\r\n|\r|\n)+/g, ' ');
-};
-goog.string.canonicalizeNewlines = function (a) {
-  return a.replace(/(\r\n|\r|\n)/g, '\n');
-};
-goog.string.normalizeWhitespace = function (a) {
-  return a.replace(/\xa0|\s/g, ' ');
-};
-goog.string.normalizeSpaces = function (a) {
-  return a.replace(/\xa0|[ \t]+/g, ' ');
-};
-goog.string.collapseBreakingSpaces = function (a) {
-  return a.replace(/[\t\r\n ]+/g, ' ').replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, '');
-};
-goog.string.trim = goog.string.internal.trim;
-goog.string.trimLeft = function (a) {
-  return a.replace(/^[\s\xa0]+/, '');
-};
-goog.string.trimRight = function (a) {
-  return a.replace(/[\s\xa0]+$/, '');
-};
-goog.string.caseInsensitiveCompare = goog.string.internal.caseInsensitiveCompare;
-goog.string.numberAwareCompare_ = function (a, b, c) {
-  if (a == b) return 0;
-  if (!a) return -1;
-  if (!b) return 1;
-  for (
-    var d = a.toLowerCase().match(c), e = b.toLowerCase().match(c), f = Math.min(d.length, e.length), g = 0;
-    g < f;
-    g++
-  ) {
-    c = d[g];
-    var h = e[g];
-    if (c != h)
-      return (a = parseInt(c, 10)), !isNaN(a) && ((b = parseInt(h, 10)), !isNaN(b) && a - b) ? a - b : c < h ? -1 : 1;
-  }
-  return d.length != e.length ? d.length - e.length : a < b ? -1 : 1;
-};
-goog.string.intAwareCompare = function (a, b) {
-  return goog.string.numberAwareCompare_(a, b, /\d+|\D+/g);
-};
-goog.string.floatAwareCompare = function (a, b) {
-  return goog.string.numberAwareCompare_(a, b, /\d+|\.\d+|\D+/g);
-};
-goog.string.numerateCompare = goog.string.floatAwareCompare;
-goog.string.urlEncode = function (a) {
-  return encodeURIComponent(String(a));
-};
-goog.string.urlDecode = function (a) {
-  return decodeURIComponent(a.replace(/\+/g, ' '));
-};
 goog.string.contains = goog.string.internal.contains;
-goog.string.caseInsensitiveContains = goog.string.internal.caseInsensitiveContains;
-goog.string.countOf = function (a, b) {
-  return a && b ? a.split(b).length - 1 : 0;
-};
-goog.string.removeAt = function (a, b, c) {
-  var d = a;
-  0 <= b && b < a.length && 0 < c && (d = a.substr(0, b) + a.substr(b + c, a.length - b - c));
-  return d;
-};
-goog.string.remove = function (a, b) {
-  return a.replace(b, '');
-};
-goog.string.repeat = String.prototype.repeat
-  ? function (a, b) {
-      return a.repeat(b);
-    }
-  : function (a, b) {
-      return Array(b + 1).join(a);
-    };
-goog.string.padNumber = function (a, b, c) {
-  a = goog.isDef(c) ? a.toFixed(c) : String(a);
-  c = a.indexOf('.');
-  -1 == c && (c = a.length);
-  return goog.string.repeat('0', Math.max(0, b - c)) + a;
-};
-goog.string.makeSafe = function (a) {
-  return null == a ? '' : String(a);
-};
-goog.string.buildString = function (a) {
-  return Array.prototype.join.call(arguments, '');
-};
-goog.string.toNumber = function (a) {
-  var b = Number(a);
-  return 0 == b && goog.string.isEmptyOrWhitespace(a) ? NaN : b;
-};
-goog.string.parseInt = function (a) {
-  isFinite(a) && (a = String(a));
-  return goog.isString(a) ? (/^\s*-?0x/i.test(a) ? parseInt(a, 16) : parseInt(a, 10)) : NaN;
-};
 goog.crypt.base64 = {};
 goog.crypt.base64.DEFAULT_ALPHABET_COMMON_ = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
 goog.crypt.base64.ENCODED_VALS = goog.crypt.base64.DEFAULT_ALPHABET_COMMON_ + '+/=';
-- 
2.28.0

