From 51b8d2852fcd35d3d85da7cb8d70f0808c1da8da Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=D0=A1=D0=BA=D0=BE=D0=B2=D0=BE=D1=80=D0=BE=D0=B4=D0=B0=20?=
 =?UTF-8?q?=D0=9D=D0=B8=D0=BA=D0=B8=D1=82=D0=B0=20=D0=90=D0=BD=D0=B4=D1=80?=
 =?UTF-8?q?=D0=B5=D0=B5=D0=B2=D0=B8=D1=87?= <chalkerx@gmail.com>
Date: Wed, 2 Sep 2020 08:52:52 +0300
Subject: [PATCH 23/27] Drop unused goog.asserts methods

---
 google-protobuf.js | 89 ----------------------------------------------
 1 file changed, 89 deletions(-)

diff --git a/google-protobuf.js b/google-protobuf.js
index 897cd16..205577c 100644
--- a/google-protobuf.js
+++ b/google-protobuf.js
@@ -247,93 +247,18 @@ goog.asserts.doAssertFailure_ = function (a, b, c, d) {
   a = new goog.asserts.AssertionError('' + e, f || []);
   goog.asserts.errorHandler_(a);
 };
-goog.asserts.setErrorHandler = function (a) {
-  goog.asserts.ENABLE_ASSERTS && (goog.asserts.errorHandler_ = a);
-};
 goog.asserts.assert = function (a, b, c) {
   goog.asserts.ENABLE_ASSERTS &&
     !a &&
     goog.asserts.doAssertFailure_('', null, b, Array.prototype.slice.call(arguments, 2));
   return a;
 };
-goog.asserts.assertExists = function (a, b, c) {
-  goog.asserts.ENABLE_ASSERTS &&
-    null == a &&
-    goog.asserts.doAssertFailure_('Expected to exist: %s.', [a], b, Array.prototype.slice.call(arguments, 2));
-  return a;
-};
 goog.asserts.fail = function (a, b) {
   goog.asserts.ENABLE_ASSERTS &&
     goog.asserts.errorHandler_(
       new goog.asserts.AssertionError('Failure' + (a ? ': ' + a : ''), Array.prototype.slice.call(arguments, 1))
     );
 };
-goog.asserts.assertNumber = function (a, b, c) {
-  goog.asserts.ENABLE_ASSERTS &&
-    !goog.isNumber(a) &&
-    goog.asserts.doAssertFailure_(
-      'Expected number but got %s: %s.',
-      [goog.typeOf(a), a],
-      b,
-      Array.prototype.slice.call(arguments, 2)
-    );
-  return a;
-};
-goog.asserts.assertString = function (a, b, c) {
-  goog.asserts.ENABLE_ASSERTS &&
-    !goog.isString(a) &&
-    goog.asserts.doAssertFailure_(
-      'Expected string but got %s: %s.',
-      [goog.typeOf(a), a],
-      b,
-      Array.prototype.slice.call(arguments, 2)
-    );
-  return a;
-};
-goog.asserts.assertFunction = function (a, b, c) {
-  goog.asserts.ENABLE_ASSERTS &&
-    !goog.isFunction(a) &&
-    goog.asserts.doAssertFailure_(
-      'Expected function but got %s: %s.',
-      [goog.typeOf(a), a],
-      b,
-      Array.prototype.slice.call(arguments, 2)
-    );
-  return a;
-};
-goog.asserts.assertObject = function (a, b, c) {
-  goog.asserts.ENABLE_ASSERTS &&
-    !goog.isObject(a) &&
-    goog.asserts.doAssertFailure_(
-      'Expected object but got %s: %s.',
-      [goog.typeOf(a), a],
-      b,
-      Array.prototype.slice.call(arguments, 2)
-    );
-  return a;
-};
-goog.asserts.assertArray = function (a, b, c) {
-  goog.asserts.ENABLE_ASSERTS &&
-    !goog.isArray(a) &&
-    goog.asserts.doAssertFailure_(
-      'Expected array but got %s: %s.',
-      [goog.typeOf(a), a],
-      b,
-      Array.prototype.slice.call(arguments, 2)
-    );
-  return a;
-};
-goog.asserts.assertBoolean = function (a, b, c) {
-  goog.asserts.ENABLE_ASSERTS &&
-    !goog.isBoolean(a) &&
-    goog.asserts.doAssertFailure_(
-      'Expected boolean but got %s: %s.',
-      [goog.typeOf(a), a],
-      b,
-      Array.prototype.slice.call(arguments, 2)
-    );
-  return a;
-};
 goog.asserts.assertInstanceof = function (a, b, c, d) {
   !goog.asserts.ENABLE_ASSERTS ||
     a instanceof b ||
@@ -345,20 +270,6 @@ goog.asserts.assertInstanceof = function (a, b, c, d) {
     );
   return a;
 };
-goog.asserts.assertFinite = function (a, b, c) {
-  !goog.asserts.ENABLE_ASSERTS ||
-    ('number' == typeof a && isFinite(a)) ||
-    goog.asserts.doAssertFailure_(
-      'Expected %s to be a finite number but it is not.',
-      [a],
-      b,
-      Array.prototype.slice.call(arguments, 2)
-    );
-  return a;
-};
-goog.asserts.assertObjectPrototypeIsIntact = function () {
-  for (var a in Object.prototype) goog.asserts.fail(a + ' should not be enumerable in Object.prototype.');
-};
 goog.asserts.getType_ = function (a) {
   return a instanceof Function
     ? a.displayName || a.name || 'unknown type name'
-- 
2.28.0

